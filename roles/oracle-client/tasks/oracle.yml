---
- name: unpack Oracle client installation archive
  unarchive: src="{{oracle_client_download_url}}" dest="/tmp" copy=no owner={{oracle_user}} group={{oracle_group}} creates={{installer_dir}}
  
- name: install required packages
  yum: name={{item}} state=present
  with_items:
    - binutils.x86_64
    - compat-libcap1.x86_64
    - gcc.x86_64
    - gcc-c++.x86_64
    - glibc.i686
    - glibc.x86_64
    - glibc-devel.i686
    - glibc-devel.x86_64
    - ksh
    - compat-libstdc++-33
    - libaio.i686
    - libaio.x86_64
    - libaio-devel.i686
    - libaio-devel.x86_64
    - libgcc.i686
    - libgcc.x86_64
    - libstdc++.i686
    - libstdc++.x86_64
    - libstdc++-devel.i686
    - libstdc++-devel.x86_64
    - libXi.i686
    - libXi.x86_64
    - libXtst.i686
    - libXtst.x86_64
    - make.x86_64
    - sysstat.x86_64
    - xorg-x11-xauth.x86_64
    - xorg-x11-utils.x86_64

- name: update Oracle client installation config
  template:
    src: client_install.rsp.j2
    dest: "{{ response_file }}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0640

- name: create Oracle base directory
  file: path="{{ oracle_base }}" state=directory owner="{{ oracle_user }}"  group="{{ oracle_group }}" mode=0755

- name: create OraInventory directory
  file: path="{{ oracle_inventory_dir }}" state=directory owner="{{ oracle_user }}"  group="{{ oracle_group }}" mode=0755
  
- name: install Oracle client
  become_user: "{{ oracle_user }}"
  become: yes
  command: "{{ installer_script }} {{ installer_opts }} {{ response_file }}"
  args:
    creates:"{{oracle_client_home}}"
  register: client_install
  failed_when: "'{{ success_message }}' not in client_install.stdout"

- name: check update {{oracle_inventory_script}}
  stat: path="{{oracle_inventory_script}}"
  register: checkUpdateInventory
  ignore_errors: true
  
- name: update Oracle inventory
  command: "{{ oracle_inventory_script }}"
  when: client_install.changed and checkUpdateInventory.stat.exists

- name: remove Oracle client installation directory
  file: path="{{ installer_dir }}" state=absent
